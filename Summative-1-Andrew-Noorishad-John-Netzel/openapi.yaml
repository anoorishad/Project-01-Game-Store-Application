openapi: 3.0.1
info:
  title: Summative-1 Game Store OpenAPI definition
  version: v1
  description: "This API maintains an inventory of product for a game store. Typical create, read, update, and delete endpoints are provided for each product categoy (games, t-shirts, and consoles). Create and read endpoints are provided for product invoices. Additional GET endopints are provided for filtering of products by relevant fields."
servers:
  - url: http://localhost:8080/
    description: Local server url
paths:
  /tshirts:
    get:
      tags:
        - t-shirt-controller
      operationId: getTShirts
      description: "Get all t-shirts"
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TShirt'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
    put:
      tags:
        - t-shirt-controller
      operationId: updateTShirt
      description: "Update a t-shirt"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TShirt'
        required: true
      responses:
        '204':
          description: No Content
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
    post:
      tags:
        - t-shirt-controller
      operationId: addTShirt
      description: "Add a t-shirt"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TShirt'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TShirt'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
  /games:
    get:
      tags:
        - game-controller
      operationId: getGames
      description: "Get all games"
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
    put:
      tags:
        - game-controller
      operationId: updateGame
      description: "Update a game"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
        required: true
      responses:
        '204':
          description: No Content
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
    post:
      tags:
        - game-controller
      operationId: addGame
      description: "Create a game"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Game'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
  /consoles:
    get:
      tags:
        - console-controller
      operationId: getConsoles
      description: "Get all consoles"
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Console'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
    put:
      tags:
        - console-controller
      operationId: updateConsole
      description: "Update a console"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Console'
        required: true
      responses:
        '204':
          description: No Content
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
    post:
      tags:
        - console-controller
      operationId: addConsole
      description: "Create a console"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Console'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Console'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
  /invoices:
    get:
      tags:
        - invoice-controller
      operationId: getInvoices
      description: "Get all invoices"
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
    post:
      tags:
        - invoice-controller
      operationId: addInvoice
      description: "Create an invoice"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Invoice'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
  /tshirts/{id}:
    get:
      tags:
        - t-shirt-controller
      operationId: getTShirtById
      description: "Get t-shirt by ID"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TShirt'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
    delete:
      tags:
        - t-shirt-controller
      operationId: deleteTShirt
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
  /tshirts/size/{size}:
    get:
      tags:
        - t-shirt-controller
      operationId: getTShirtBySize
      description: "Get all t-shirts by size"
      parameters:
        - name: size
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TShirt'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
  /tshirts/color/{color}:
    get:
      tags:
        - t-shirt-controller
      operationId: getTShirtByColor
      description: "Get all t-shirts by color"
      parameters:
        - name: color
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TShirt'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
  /load-data:
    get:
      tags:
        - data-loader-controller
      operationId: loadData
      description: "Seeds database with data for testing purposes"
      responses:
        '200':
          description: OK
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
  /invoices/{id}:
    get:
      tags:
        - invoice-controller
      operationId: getInvoiceById
      description: "Get an invoice by ID"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Invoice'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
  /invoices/name/{name}:
    get:
      tags:
        - invoice-controller
      operationId: getInvoiceByCustomerName
      description: "Get an invoice by customer name"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
  /games/{id}:
    get:
      tags:
        - game-controller
      operationId: getGameById
      description: "Get a game by ID"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Game'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
    delete:
      tags:
        - game-controller
      operationId: deleteGame
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
  /games/title/{title}:
    get:
      tags:
        - game-controller
      operationId: getGameByTitle
      description: "Get all games by title"
      parameters:
        - name: title
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
  /games/studio/{studio}:
    get:
      tags:
        - game-controller
      operationId: getGameByStudio
      description: "Get all games by studio name"
      parameters:
        - name: studio
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
  /games/esrb/{esrb}:
    get:
      tags:
        - game-controller
      operationId: getGameByEsrbRating
      description: "Get all games by ESRB rating"
      parameters:
        - name: esrb
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
  /consoles/{id}:
    get:
      tags:
        - console-controller
      operationId: getConsoleById
      description: "Get a console by ID"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Console'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
    delete:
      tags:
        - console-controller
      operationId: deleteConsole
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
  /consoles/manufacturer/{manufacturer}:
    get:
      tags:
        - console-controller
      operationId: getConsoleByManufacturer
      description: "Get all consoles by manufacturer"
      parameters:
        - name: manufacturer
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Console'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomErrorResponse'
components:
  schemas:
    CustomErrorResponse:
      type: object
      properties:
        errorMsg:
          type: string
        status:
          type: integer
          format: int32
        errorCode:
          type: string
        timestamp:
          type: string
          format: date-time
    TShirt:
      required:
        - color
        - description
        - price
        - quantity
        - size
      type: object
      properties:
        id:
          type: integer
          format: int32
        size:
          type: string
        color:
          type: string
        description:
          type: string
        price:
          type: number
        quantity:
          type: integer
          format: int32
    Game:
      required:
        - description
        - esrbRating
        - price
        - quantity
        - studio
        - title
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        esrbRating:
          type: string
        description:
          type: string
        price:
          type: number
        studio:
          type: string
        quantity:
          type: integer
          format: int32
    Console:
      required:
        - manufacturer
        - memoryAmount
        - model
        - price
        - processor
        - quantity
      type: object
      properties:
        id:
          type: integer
          format: int32
        model:
          type: string
        manufacturer:
          type: string
        memoryAmount:
          type: string
        processor:
          type: string
        price:
          type: number
        quantity:
          type: integer
          format: int32
    Invoice:
      required:
        - city
        - itemId
        - itemType
        - name
        - processingFee
        - quantity
        - state
        - street
        - subtotal
        - tax
        - total
        - unitPrice
        - zipcode
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        street:
          type: string
        city:
          type: string
        state:
          type: string
        zipcode:
          type: string
        itemType:
          type: string
        itemId:
          type: integer
          format: int32
        unitPrice:
          type: number
        quantity:
          type: integer
          format: int32
        subtotal:
          type: number
        tax:
          type: number
        processingFee:
          type: number
        total:
          type: number
